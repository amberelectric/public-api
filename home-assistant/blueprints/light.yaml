blueprint:
  name: Amber Light
  description: Change the colour of a lamp based on the current Amber price
  domain: automation
  input:
    amber_price_descriptor:
      name: Amber Price Descriptor
      description: The Amber price descriptor you wish to track. If in doubt, use General
        Price.
      selector:
        entity:
          integration: amberelectric
          domain: sensor
    target_light:
      name: Light
      description: The light you wish to use as the indicator
      selector:
        target:
          entity:
            domain: light

trigger:
- platform: state
  entity_id: !input 'amber_price_descriptor'
action:
- variables:
    price_descriptor: '{{ trigger.to_state.state }}'
- service: light.turn_on
  target: !input 'target_light'
  data:
    color_name: >
      {% if price_descriptor == 'spike' %}
        purple
      {% elif price_descriptor == 'high' %}
        red
      {% elif price_descriptor == 'neutral' %}
        darkorange
      {% elif price_descriptor == 'low' %}
        orange
      {% elif price_descriptor == 'very_low' %}
        green
      {% elif price_descriptor == 'extremely_low' %}
        cyan
      {% else %}
        white
      {% endif %}
